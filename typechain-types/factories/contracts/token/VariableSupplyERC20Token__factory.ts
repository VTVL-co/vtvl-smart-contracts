/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VariableSupplyERC20Token,
  VariableSupplyERC20TokenInterface,
} from "../../../contracts/token/VariableSupplyERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "AdminAccessSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressToCheck",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEnabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011c7380380620011c7833981016040819052620000349162000489565b8351849084906200004d90600390602085019062000316565b5080516200006390600490602084019062000316565b505032600081815260056020908152604091829020805460ff1916600190811790915591519182529192507fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a26000821180620000c95750600081115b6200010c5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064015b60405180910390fd5b6006819055811562000124576200012433836200012e565b505050506200058a565b3360009081526005602052604090205460ff166200018f5760405162461bcd60e51b815260206004820152601560248201527f41444d494e5f4143434553535f52455155495245440000000000000000000000604482015260640162000103565b6001600160a01b038216620001d95760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015260640162000103565b600654156200024157600654811115620002275760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640162000103565b80600660008282546200023b919062000519565b90915550505b6200024d828262000251565b5050565b6001600160a01b038216620002a95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000103565b8060026000828254620002bd919062000533565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200024d565b82805462000324906200054e565b90600052602060002090601f01602090048101928262000348576000855562000393565b82601f106200036357805160ff191683800117855562000393565b8280016001018555821562000393579182015b828111156200039357825182559160200191906001019062000376565b50620003a1929150620003a5565b5090565b5b80821115620003a15760008155600101620003a6565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003e457600080fd5b81516001600160401b0380821115620004015762000401620003bc565b604051601f8301601f19908116603f011681019082821181831017156200042c576200042c620003bc565b816040528381526020925086838588010111156200044957600080fd5b600091505b838210156200046d57858201830151818301840152908201906200044e565b838211156200047f5760008385830101525b9695505050505050565b60008060008060808587031215620004a057600080fd5b84516001600160401b0380821115620004b857600080fd5b620004c688838901620003d2565b95506020870151915080821115620004dd57600080fd5b50620004ec87828801620003d2565b604087015160609097015195989097509350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156200052e576200052e62000503565b500390565b6000821982111562000549576200054962000503565b500190565b600181811c908216806200056357607f821691505b6020821081036200058457634e487b7160e01b600052602260045260246000fd5b50919050565b610c2d806200059a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a457c2d711610066578063a457c2d714610207578063a9059cbb1461021a578063cc5c095c1461022d578063dd62ed3e1461023657600080fd5b806340c10f19146101ae5780634b0bddd2146101c357806370a08231146101d657806395d89b41146101ff57600080fd5b806323b872dd116100d357806323b872dd1461014d57806324d7806c14610160578063313ce5671461018c578063395093511461019b57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610249565b60405161010f9190610a10565b60405180910390f35b61012b610126366004610a81565b6102db565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610aab565b6102f3565b61012b61016e366004610ae7565b6001600160a01b031660009081526005602052604090205460ff1690565b6040516012815260200161010f565b61012b6101a9366004610a81565b610317565b6101c16101bc366004610a81565b610339565b005b6101c16101d1366004610b09565b61044e565b61013f6101e4366004610ae7565b6001600160a01b031660009081526020819052604090205490565b61010261054c565b61012b610215366004610a81565b61055b565b61012b610228366004610a81565b6105d6565b61013f60065481565b61013f610244366004610b45565b6105e4565b60606003805461025890610b78565b80601f016020809104026020016040519081016040528092919081815260200182805461028490610b78565b80156102d15780601f106102a6576101008083540402835291602001916102d1565b820191906000526020600020905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b6000336102e981858561060f565b5060019392505050565b600033610301858285610733565b61030c8585856107ad565b506001949350505050565b6000336102e981858561032a83836105e4565b6103349190610bc8565b61060f565b3360009081526005602052604090205460ff166103955760405162461bcd60e51b8152602060048201526015602482015274105113525397d050d0d154d4d7d491545552549151605a1b60448201526064015b60405180910390fd5b6001600160a01b0382166103dd5760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015260640161038c565b60065415610440576006548111156104285760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161038c565b806006600082825461043a9190610be0565b90915550505b61044a8282610951565b5050565b3360009081526005602052604090205460ff166104a55760405162461bcd60e51b8152602060048201526015602482015274105113525397d050d0d154d4d7d491545552549151605a1b604482015260640161038c565b6001600160a01b0382166104ed5760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015260640161038c565b6001600160a01b038216600081815260056020908152604091829020805460ff191685151590811790915591519182527fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a25050565b60606004805461025890610b78565b6000338161056982866105e4565b9050838110156105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161038c565b61030c828686840361060f565b6000336102e98185856107ad565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038c565b6001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061073f84846105e4565b905060001981146107a7578181101561079a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161038c565b6107a7848484840361060f565b50505050565b6001600160a01b0383166108115760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038c565b6001600160a01b0382166108735760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038c565b6001600160a01b038316600090815260208190526040902054818110156108eb5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038c565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107a7565b6001600160a01b0382166109a75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161038c565b80600260008282546109b99190610bc8565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610a3d57858101830151858201604001528201610a21565b81811115610a4f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a7c57600080fd5b919050565b60008060408385031215610a9457600080fd5b610a9d83610a65565b946020939093013593505050565b600080600060608486031215610ac057600080fd5b610ac984610a65565b9250610ad760208501610a65565b9150604084013590509250925092565b600060208284031215610af957600080fd5b610b0282610a65565b9392505050565b60008060408385031215610b1c57600080fd5b610b2583610a65565b915060208301358015158114610b3a57600080fd5b809150509250929050565b60008060408385031215610b5857600080fd5b610b6183610a65565b9150610b6f60208401610a65565b90509250929050565b600181811c90821680610b8c57607f821691505b602082108103610bac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610bdb57610bdb610bb2565b500190565b600082821015610bf257610bf2610bb2565b50039056fea26469706673582212206db288996082c6eb978afd9b64b6649dcb7a3b4c471bd16f7620342a3fd2270c64736f6c634300080e0033";

type VariableSupplyERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VariableSupplyERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VariableSupplyERC20Token__factory extends ContractFactory {
  constructor(...args: VariableSupplyERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    initialSupply_: BigNumberish,
    maxSupply_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<VariableSupplyERC20Token> {
    return super.deploy(
      name_,
      symbol_,
      initialSupply_,
      maxSupply_,
      overrides || {}
    ) as Promise<VariableSupplyERC20Token>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    initialSupply_: BigNumberish,
    maxSupply_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      initialSupply_,
      maxSupply_,
      overrides || {}
    );
  }
  override attach(address: string): VariableSupplyERC20Token {
    return super.attach(address) as VariableSupplyERC20Token;
  }
  override connect(signer: Signer): VariableSupplyERC20Token__factory {
    return super.connect(signer) as VariableSupplyERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VariableSupplyERC20TokenInterface {
    return new utils.Interface(_abi) as VariableSupplyERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VariableSupplyERC20Token {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VariableSupplyERC20Token;
  }
}
