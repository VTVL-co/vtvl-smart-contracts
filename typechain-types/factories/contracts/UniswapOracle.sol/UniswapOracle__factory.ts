/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapOracle,
  UniswapOracleInterface,
} from "../../../contracts/UniswapOracle.sol/UniswapOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Extented",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [],
    name: "UNISWAP_V3_FACTORY_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_DECIMAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "contract IERC20Extented",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDecimal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001150380380620011508339810160408190526200003491620001c9565b6001600160a01b038116620000815760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015260640160405180910390fd5b6001600160a01b03811660808190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015620000cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f29190620001f0565b60ff1660a052608051604051630b4c774160e11b81526001600160a01b03909116600482015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4860248201526101f46044820152731f98431c8ad98523631ae4a59f267346ea31f98490631698ee8290606401602060405180830381865afa15801562000177573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200019d9190620001c9565b6001600160a01b031660c0525062000215565b6001600160a01b0381168114620001c657600080fd5b50565b600060208284031215620001dc57600080fd5b8151620001e981620001b0565b9392505050565b6000602082840312156200020357600080fd5b815160ff81168114620001e957600080fd5b60805160a05160c051610ef862000258600039600081816087015261017b01526000818160ec01526101ed01526000818161011b01526101aa0152610ef86000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063740943311161005b578063740943311461010e5780639d76ea5814610116578063bb09d9b71461013d578063e3d11ba01461015857600080fd5b806316f0115b146100825780634f7ed921146100c65780635caed029146100e7575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d96100d4366004610980565b610173565b6040519081526020016100bd565b6100d97f000000000000000000000000000000000000000000000000000000000000000081565b6100d9600681565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a973a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b6100a9731f98431c8ad98523631ae4a59f267346ea31f98481565b6000806101a07f00000000000000000000000000000000000000000000000000000000000000008461024e565b5090506101e381857f000000000000000000000000000000000000000000000000000000000000000073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4861049c565b91508161021160067f00000000000000000000000000000000000000000000000000000000000000006109e4565b61021c90600a610adf565b610227866064610aeb565b6001600160801b031661023a9190610b1a565b6102449190610b4f565b9150505b92915050565b6000808263ffffffff166000036102905760405162461bcd60e51b8152602060048201526002602482015261042560f41b604482015260640160405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905083816000815181106102c5576102c5610b79565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106102f4576102f4610b79565b602002602001019063ffffffff16908163ffffffff1681525050600080866001600160a01b031663883bdbfd846040518263ffffffff1660e01b815260040161033d9190610b8f565b600060405180830381865afa15801561035a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103829190810190610caf565b9150915060008260008151811061039b5761039b610b79565b6020026020010151836001815181106103b6576103b6610b79565b60200260200101516103c89190610d7b565b90506000826000815181106103df576103df610b79565b6020026020010151836001815181106103fa576103fa610b79565b602002602001015161040c9190610dcb565b905061041e63ffffffff891683610df3565b965060008260060b128015610444575061043e63ffffffff891683610e31565b60060b15155b15610457578661045381610e53565b9750505b60006104706001600160a01b0363ffffffff8b16610e76565b905061048d640100000000600160c01b03602084901b1682610e9c565b96505050505050509250929050565b6000806104a8866105aa565b90506001600160801b036001600160a01b0382161161052e5760006104d66001600160a01b03831680610b1a565b9050836001600160a01b0316856001600160a01b03161061050e57610509600160c01b876001600160801b0316836108cd565b610526565b61052681876001600160801b0316600160c01b6108cd565b9250506105a1565b600061054d6001600160a01b03831680680100000000000000006108cd565b9050836001600160a01b0316856001600160a01b03161061058557610580600160801b876001600160801b0316836108cd565b61059d565b61059d81876001600160801b0316600160801b6108cd565b9250505b50949350505050565b60008060008360020b126105c1578260020b6105c9565b8260020b6000035b9050620d89e88111156105ef576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361060657600160801b610618565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561064c576ffff97272373d413259a46990580e213a0260801c5b600482161561066b576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561068a576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156106a9576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156106c8576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156106e7576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610706576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610726576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610746576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610766576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610786576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156107a6576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156107c6576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156107e6576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610806576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610827576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610847576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610866576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610883576b048a170391f7dc42444e8fa20260801c5b60008460020b13156108a45780600019816108a0576108a0610b39565b0490505b6401000000008106156108b85760016108bb565b60005b60ff16602082901c0192505050919050565b600080806000198587098587029250828110838203039150508060000361090657600084116108fb57600080fd5b508290049050610979565b80841161091257600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000806040838503121561099357600080fd5b82356001600160801b03811681146109aa57600080fd5b9150602083013563ffffffff811681146109c357600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109f6576109f66109ce565b500390565b600181815b80851115610a36578160001904821115610a1c57610a1c6109ce565b80851615610a2957918102915b93841c9390800290610a00565b509250929050565b600082610a4d57506001610248565b81610a5a57506000610248565b8160018114610a705760028114610a7a57610a96565b6001915050610248565b60ff841115610a8b57610a8b6109ce565b50506001821b610248565b5060208310610133831016604e8410600b8410161715610ab9575081810a610248565b610ac383836109fb565b8060001904821115610ad757610ad76109ce565b029392505050565b60006109798383610a3e565b60006001600160801b0380831681851681830481118215151615610b1157610b116109ce565b02949350505050565b6000816000190483118215151615610b3457610b346109ce565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610b5e57610b5e610b39565b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015610bcd57835163ffffffff1683529284019291840191600101610bab565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c0257610c02610b63565b604052919050565b600067ffffffffffffffff821115610c2457610c24610b63565b5060051b60200190565b600082601f830112610c3f57600080fd5b81516020610c54610c4f83610c0a565b610bd9565b82815260059290921b84018101918181019086841115610c7357600080fd5b8286015b84811015610ca45780516001600160a01b0381168114610c975760008081fd5b8352918301918301610c77565b509695505050505050565b60008060408385031215610cc257600080fd5b825167ffffffffffffffff80821115610cda57600080fd5b818501915085601f830112610cee57600080fd5b81516020610cfe610c4f83610c0a565b82815260059290921b84018101918181019089841115610d1d57600080fd5b948201945b83861015610d4b5785518060060b8114610d3c5760008081fd5b82529482019490820190610d22565b91880151919650909350505080821115610d6457600080fd5b50610d7185828601610c2e565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615610da657610da66109ce565b81667fffffffffffff018313811615610dc157610dc16109ce565b5090039392505050565b60006001600160a01b0383811690831681811015610deb57610deb6109ce565b039392505050565b60008160060b8360060b80610e0a57610e0a610b39565b667fffffffffffff19821460001982141615610e2857610e286109ce565b90059392505050565b60008260060b80610e4457610e44610b39565b808360060b0791505092915050565b60008160020b627fffff198103610e6c57610e6c6109ce565b6000190192915050565b60006001600160c01b0382811684821681151582840482111615610b1157610b116109ce565b60006001600160c01b0383811680610eb657610eb6610b39565b9216919091049291505056fea2646970667358221220e5302e704ec24c26cee02f2cbd5a2aceddbd620eb7c2ecd5d9660218c1df299c64736f6c634300080e0033";

type UniswapOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapOracle__factory extends ContractFactory {
  constructor(...args: UniswapOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<UniswapOracle> {
    return super.deploy(
      _tokenAddress,
      overrides || {}
    ) as Promise<UniswapOracle>;
  }
  override getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override attach(address: string): UniswapOracle {
    return super.attach(address) as UniswapOracle;
  }
  override connect(signer: Signer): UniswapOracle__factory {
    return super.connect(signer) as UniswapOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapOracleInterface {
    return new utils.Interface(_abi) as UniswapOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapOracle {
    return new Contract(address, _abi, signerOrProvider) as UniswapOracle;
  }
}
