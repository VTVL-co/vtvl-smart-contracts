/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapOracle,
  UniswapOracleInterface,
} from "../../contracts/UniswapOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "T",
    type: "error",
  },
  {
    inputs: [],
    name: "UNISWAP_V3_FACTORY_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610ed1380380610ed183398101604081905261002f9161014b565b6001600160a01b03811661007b5760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015260640160405180910390fd5b6001600160a01b0381166080819052604051630b4c774160e11b8152600481019190915273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4860248201526101f46044820152731f98431c8ad98523631ae4a59f267346ea31f98490631698ee8290606401602060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610121919061014b565b6001600160a01b031660a0525061016f565b6001600160a01b038116811461014857600080fd5b50565b60006020828403121561015d57600080fd5b815161016881610133565b9392505050565b60805160a051610d316101a0600039600081816061015261025b01526000818160c601526101340152610d316000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806316f0115b1461005c578063434150dd146100a05780639d76ea58146100c1578063bb09d9b7146100e8578063e3d11ba014610103575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b36100ae3660046108e6565b61011e565b604051908152602001610097565b6100837f000000000000000000000000000000000000000000000000000000000000000081565b61008373a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b610083731f98431c8ad98523631ae4a59f267346ea31f98481565b60008061012a83610196565b50905061016d81857f000000000000000000000000000000000000000000000000000000000000000073a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610402565b91506001600160801b03841661018483606461094a565b61018e919061097f565b949350505050565b6000808263ffffffff166000036101d85760405162461bcd60e51b8152602060048201526002602482015261042560f41b604482015260640160405180910390fd5b604080516002808252606082018352600092602083019080368337019050509050838160008151811061020d5761020d6109a9565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061023c5761023c6109a9565b602002602001019063ffffffff16908163ffffffff16815250506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663883bdbfd846040518263ffffffff1660e01b81526004016102a591906109bf565b600060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ea9190810190610adf565b91509150600082600081518110610303576103036109a9565b60200260200101518360018151811061031e5761031e6109a9565b60200260200101516103309190610bab565b9050600082600081518110610347576103476109a9565b602002602001015183600181518110610362576103626109a9565b60200260200101516103749190610bfb565b905061038663ffffffff891683610c23565b965060008260060b1280156103ac57506103a663ffffffff891683610c61565b60060b15155b156103bf57866103bb81610c83565b9750505b60006103d86001600160a01b0363ffffffff8b16610ca6565b90506103f5640100000000600160c01b03602084901b1682610cd5565b9650505050505050915091565b60008061040e86610510565b90506001600160801b036001600160a01b0382161161049457600061043c6001600160a01b0383168061094a565b9050836001600160a01b0316856001600160a01b0316106104745761046f600160c01b876001600160801b031683610833565b61048c565b61048c81876001600160801b0316600160c01b610833565b925050610507565b60006104b36001600160a01b0383168068010000000000000000610833565b9050836001600160a01b0316856001600160a01b0316106104eb576104e6600160801b876001600160801b031683610833565b610503565b61050381876001600160801b0316600160801b610833565b9250505b50949350505050565b60008060008360020b12610527578260020b61052f565b8260020b6000035b9050620d89e8811115610555576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361056c57600160801b61057e565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156105b2576ffff97272373d413259a46990580e213a0260801c5b60048216156105d1576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156105f0576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561060f576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561062e576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561064d576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561066c576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561068c576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156106ac576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156106cc576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156106ec576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561070c576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561072c576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561074c576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561076c576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561078d576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156107ad576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156107cc576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156107e9576b048a170391f7dc42444e8fa20260801c5b60008460020b131561080a57806000198161080657610806610969565b0490505b64010000000081061561081e576001610821565b60005b60ff16602082901c0192505050919050565b600080806000198587098587029250828110838203039150508060000361086c576000841161086157600080fd5b5082900490506108df565b80841161087857600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b600080604083850312156108f957600080fd5b82356001600160801b038116811461091057600080fd5b9150602083013563ffffffff8116811461092957600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561096457610964610934565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261098e5761098e610969565b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156109fd57835163ffffffff16835292840192918401916001016109db565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a3257610a32610993565b604052919050565b600067ffffffffffffffff821115610a5457610a54610993565b5060051b60200190565b600082601f830112610a6f57600080fd5b81516020610a84610a7f83610a3a565b610a09565b82815260059290921b84018101918181019086841115610aa357600080fd5b8286015b84811015610ad45780516001600160a01b0381168114610ac75760008081fd5b8352918301918301610aa7565b509695505050505050565b60008060408385031215610af257600080fd5b825167ffffffffffffffff80821115610b0a57600080fd5b818501915085601f830112610b1e57600080fd5b81516020610b2e610a7f83610a3a565b82815260059290921b84018101918181019089841115610b4d57600080fd5b948201945b83861015610b7b5785518060060b8114610b6c5760008081fd5b82529482019490820190610b52565b91880151919650909350505080821115610b9457600080fd5b50610ba185828601610a5e565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615610bd657610bd6610934565b81667fffffffffffff018313811615610bf157610bf1610934565b5090039392505050565b60006001600160a01b0383811690831681811015610c1b57610c1b610934565b039392505050565b60008160060b8360060b80610c3a57610c3a610969565b667fffffffffffff19821460001982141615610c5857610c58610934565b90059392505050565b60008260060b80610c7457610c74610969565b808360060b0791505092915050565b60008160020b627fffff198103610c9c57610c9c610934565b6000190192915050565b60006001600160c01b0382811684821681151582840482111615610ccc57610ccc610934565b02949350505050565b60006001600160c01b0383811680610cef57610cef610969565b9216919091049291505056fea26469706673582212208804b145736ce73924329bc880ae8522028cf4e971e802ab8acf5ee36f394e7d64736f6c634300080e0033";

type UniswapOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapOracle__factory extends ContractFactory {
  constructor(...args: UniswapOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<UniswapOracle> {
    return super.deploy(
      _tokenAddress,
      overrides || {}
    ) as Promise<UniswapOracle>;
  }
  override getDeployTransaction(
    _tokenAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override attach(address: string): UniswapOracle {
    return super.attach(address) as UniswapOracle;
  }
  override connect(signer: Signer): UniswapOracle__factory {
    return super.connect(signer) as UniswapOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapOracleInterface {
    return new utils.Interface(_abi) as UniswapOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapOracle {
    return new Contract(address, _abi, signerOrProvider) as UniswapOracle;
  }
}
