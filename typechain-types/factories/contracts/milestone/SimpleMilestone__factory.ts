/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleMilestone,
  SimpleMilestoneInterface,
} from "../../../contracts/milestone/SimpleMilestone";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_allocation",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_allcationPercents",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_recipients",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "AdminAccessSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountRequested",
        type: "uint256",
      },
    ],
    name: "AdminWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "allocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRecipients",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "getMilestone",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawnAmount",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "period",
            type: "uint128",
          },
          {
            internalType: "uint120",
            name: "releaseIntervalSecs",
            type: "uint120",
          },
          {
            internalType: "bool",
            name: "isWithdrawn",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "allocation",
            type: "uint248",
          },
          {
            internalType: "uint8",
            name: "percent",
            type: "uint8",
          },
        ],
        internalType: "struct Milestone",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressToCheck",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "isCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokensReservedForVesting",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipients",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEnabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "setComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200159138038062001591833981016040819052620000349162000361565b3260008181526020818152604091829020805460ff1916600190811790915591519182527fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a2805162000098906001906020840190620001da565b50600280546001600160a01b0319166001600160a01b0386161790556003839055620000d082620000da602090811b62000a4417901c565b50505050620004af565b805160005b81811015620001d55760015460035484516000916064918790869081106200010b576200010b62000448565b60200260200101516200011f91906200045e565b6200012b91906200048c565b905060005b82811015620001c65781600560006001848154811062000154576200015462000448565b6000918252602080832091909101546001600160a01b031683528281019390935260409182018120888252909252902060030180547fff00000000000000000000000000000000000000000000000000000000000000166001600160f81b039290921691909117905560010162000130565b508260010192505050620000df565b505050565b82805482825590600052602060002090810192821562000232579160200282015b828111156200023257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001fb565b506200024092915062000244565b5090565b5b8082111562000240576000815560010162000245565b6001600160a01b03811681146200027157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002b557620002b562000274565b604052919050565b60006001600160401b03821115620002d957620002d962000274565b5060051b60200190565b600082601f830112620002f557600080fd5b815160206200030e6200030883620002bd565b6200028a565b82815260059290921b840181019181810190868411156200032e57600080fd5b8286015b848110156200035657805162000348816200025b565b835291830191830162000332565b509695505050505050565b600080600080608085870312156200037857600080fd5b845162000385816200025b565b60208681015160408801519296509450906001600160401b0380821115620003ac57600080fd5b818801915088601f830112620003c157600080fd5b8151620003d26200030882620002bd565b81815260059190911b8301840190848101908b831115620003f257600080fd5b938501935b828510156200041257845182529385019390850190620003f7565b60608b015190975094505050808311156200042c57600080fd5b50506200043c87828801620002e3565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156200048757634e487b7160e01b600052601160045260246000fd5b500290565b600082620004aa57634e487b7160e01b600052601260045260246000fd5b500490565b6110d280620004bf6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806358d2a3641161008c5780639d76ea58116100665780639d76ea5814610314578063b6b55f251461033f578063b74513c114610352578063d1bc76a11461036757600080fd5b806358d2a364146102e557806379b8d938146102f857806388a17bde1461030b57600080fd5b806324d7806c116100c857806324d7806c146101385780632e1a7d4d146101645780634b0bddd21461017757806356a3150b1461018a57600080fd5b806304c76af0146100ef578063137c68fa146100f9578063195f58e914610115575b600080fd5b6100f761037a565b005b61010260045481565b6040519081526020015b60405180910390f35b610128610123366004610e30565b610483565b604051901515815260200161010c565b610128610146366004610e5a565b6001600160a01b031660009081526020819052604090205460ff1690565b6100f7610172366004610e75565b6104bf565b6100f7610185366004610e9c565b61067a565b610274610198366004610e30565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506001600160a01b0382166000908152600560209081526040808320848452825291829020825160e0810184528154815260018201549281019290925260028101546001600160801b038116938301939093526001600160781b03600160801b840416606083015260ff600160f81b938490048116151560808401526003909101546001600160f81b03811660a08401529290920490911660c082015292915050565b60405161010c919081518152602080830151908201526040808301516001600160801b0316908201526060808301516001600160781b03169082015260808083015115159082015260a0808301516001600160f81b03169082015260c09182015160ff169181019190915260e00190565b6100f76102f3366004610e30565b61074e565b610102610306366004610e30565b6108d2565b61010260035481565b600254610327906001600160a01b031681565b6040516001600160a01b03909116815260200161010c565b6100f761034d366004610e75565b61099d565b61035a6109b8565b60405161010c9190610ed3565b610327610375366004610e75565b610a1a565b3360009081526020819052604090205460ff166103b25760405162461bcd60e51b81526004016103a990610f20565b60405180910390fd5b600480546002546040516370a0823160e01b815230938101939093526000926001600160a01b03909116906370a0823190602401602060405180830381865afa158015610403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104279190610f4f565b6104319190610f7e565b60025490915061044b906001600160a01b03163383610b1e565b60405181815233907fca1cf43de312865665f595e88f569f9d5246690c07df26e86aba01147e6d13149060200160405180910390a250565b6001600160a01b0382166000908152600560209081526040808320848452909152812054156104b35760016104b6565b60005b90505b92915050565b33600081815260056020908152604080832085845290915281206003015483916001600160f81b0390911690036105275760405162461bcd60e51b815260206004820152600c60248201526b4e4f5f4d494c4553544f4e4560a01b60448201526064016103a9565b3360008181526005602090815260408083208784529091528120548591036105815760405162461bcd60e51b815260206004820152600d60248201526c1393d517d0d3d3541311551151609a1b60448201526064016103a9565b33600090815260056020908152604080832088845290915290206002810154600160f81b900460ff16156105ec5760405162461bcd60e51b81526020600482015260126024820152711053149150511657d5d2551211149055d15160721b60448201526064016103a9565b6002810180546001600160f81b0316600160f81b17905561062e61060d3390565b60038301546002546001600160a01b031691906001600160f81b0316610b1e565b6003810154604080516001600160f81b0390921682525133917fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a919081900360200190a2505050505050565b3360009081526020819052604090205460ff166106a95760405162461bcd60e51b81526004016103a990610f20565b6001600160a01b0382166106f15760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b60448201526064016103a9565b6001600160a01b03821660008181526020818152604091829020805460ff191685151590811790915591519182527fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a25050565b3360009081526020819052604090205460ff1661077d5760405162461bcd60e51b81526004016103a990610f20565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190610f4f565b6001546003549192506107fc91610f95565b81101561083b5760405162461bcd60e51b815260206004820152600d60248201526c1393d517d1115413d4d2551151609a1b60448201526064016103a9565b6001600160a01b038316600090815260056020908152604080832085845290915290208054156108a15760405162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3541311551151607a1b60448201526064016103a9565b4281556003810154600480546001600160f81b03909216916000906108c7908490610fb4565b909155505050505050565b6001600160a01b03821660009081526005602090815260408083208484528252808320815160e081018352815480825260018301549482019490945260028201546001600160801b038116938201939093526001600160781b03600160801b840416606082015260ff600160f81b938490048116151560808301526003909201546001600160f81b03811660a0830152929092041660c082015290158061097a575080608001515b156109895760009150506104b9565b60a001516001600160f81b031690506104b9565b6002546109b5906001600160a01b0316333084610b81565b50565b60606001805480602002602001604051908101604052809291908181526020018280548015610a1057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109f2575b5050505050905090565b60018181548110610a2a57600080fd5b6000918252602090912001546001600160a01b0316905081565b805160005b81811015610b19576001546003548451600091606491879086908110610a7157610a71610fcc565b6020026020010151610a839190610f95565b610a8d9190610fe2565b905060005b82811015610b0b57816005600060018481548110610ab257610ab2610fcc565b6000918252602080832091909101546001600160a01b031683528281019390935260409182018120888252909252902060030180546001600160f81b0319166001600160f81b0392909216919091179055600101610a92565b508260010192505050610a49565b505050565b6040516001600160a01b038316602482015260448101829052610b1990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bbf565b6040516001600160a01b0380851660248301528316604482015260648101829052610bb99085906323b872dd60e01b90608401610b4a565b50505050565b6000610c14826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c919092919063ffffffff16565b805190915015610b195780806020019051810190610c329190611004565b610b195760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103a9565b6060610ca08484600085610caa565b90505b9392505050565b606082471015610d0b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103a9565b6001600160a01b0385163b610d625760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103a9565b600080866001600160a01b03168587604051610d7e919061104d565b60006040518083038185875af1925050503d8060008114610dbb576040519150601f19603f3d011682016040523d82523d6000602084013e610dc0565b606091505b5091509150610dd0828286610ddb565b979650505050505050565b60608315610dea575081610ca3565b825115610dfa5782518084602001fd5b8160405162461bcd60e51b81526004016103a99190611069565b80356001600160a01b0381168114610e2b57600080fd5b919050565b60008060408385031215610e4357600080fd5b610e4c83610e14565b946020939093013593505050565b600060208284031215610e6c57600080fd5b6104b682610e14565b600060208284031215610e8757600080fd5b5035919050565b80151581146109b557600080fd5b60008060408385031215610eaf57600080fd5b610eb883610e14565b91506020830135610ec881610e8e565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610f145783516001600160a01b031683529284019291840191600101610eef565b50909695505050505050565b602080825260159082015274105113525397d050d0d154d4d7d491545552549151605a1b604082015260600190565b600060208284031215610f6157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610f9057610f90610f68565b500390565b6000816000190483118215151615610faf57610faf610f68565b500290565b60008219821115610fc757610fc7610f68565b500190565b634e487b7160e01b600052603260045260246000fd5b600082610fff57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561101657600080fd5b8151610ca381610e8e565b60005b8381101561103c578181015183820152602001611024565b83811115610bb95750506000910152565b6000825161105f818460208701611021565b9190910192915050565b6020815260008251806020840152611088816040850160208701611021565b601f01601f1916919091016040019291505056fea26469706673582212207c2850445d014ff6205f7e436e9d16f15116b928a86f739d2154bef2dab11b5e64736f6c634300080e0033";

type SimpleMilestoneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleMilestoneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleMilestone__factory extends ContractFactory {
  constructor(...args: SimpleMilestoneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenAddress: string,
    _allocation: BigNumberish,
    _allcationPercents: BigNumberish[],
    _recipients: string[],
    overrides?: Overrides & { from?: string }
  ): Promise<SimpleMilestone> {
    return super.deploy(
      _tokenAddress,
      _allocation,
      _allcationPercents,
      _recipients,
      overrides || {}
    ) as Promise<SimpleMilestone>;
  }
  override getDeployTransaction(
    _tokenAddress: string,
    _allocation: BigNumberish,
    _allcationPercents: BigNumberish[],
    _recipients: string[],
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddress,
      _allocation,
      _allcationPercents,
      _recipients,
      overrides || {}
    );
  }
  override attach(address: string): SimpleMilestone {
    return super.attach(address) as SimpleMilestone;
  }
  override connect(signer: Signer): SimpleMilestone__factory {
    return super.connect(signer) as SimpleMilestone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleMilestoneInterface {
    return new utils.Interface(_abi) as SimpleMilestoneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleMilestone {
    return new Contract(address, _abi, signerOrProvider) as SimpleMilestone;
  }
}
