/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BaseMilestone,
  BaseMilestoneInterface,
} from "../../../contracts/milestone/BaseMilestone";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_enabled",
        type: "bool",
      },
    ],
    name: "AdminAccessSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountRequested",
        type: "uint256",
      },
    ],
    name: "AdminWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_withdrawalAmount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    inputs: [],
    name: "allocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRecipients",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "getMilestone",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawnAmount",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "period",
            type: "uint128",
          },
          {
            internalType: "uint120",
            name: "releaseIntervalSecs",
            type: "uint120",
          },
          {
            internalType: "bool",
            name: "isWithdrawn",
            type: "bool",
          },
          {
            internalType: "uint248",
            name: "allocation",
            type: "uint248",
          },
          {
            internalType: "uint8",
            name: "percent",
            type: "uint8",
          },
        ],
        internalType: "struct Milestone",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressToCheck",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "isCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numTokensReservedForVesting",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "recipients",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isEnabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_milestoneIndex",
        type: "uint256",
      },
    ],
    name: "setComplete",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b503260008181526020818152604091829020805460ff1916600190811790915591519182527fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a2610cdf8061006f6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806358d2a3641161007157806358d2a3641461029c57806388a17bde146102af5780639d76ea58146102b8578063b6b55f25146102e3578063b74513c1146102f6578063d1bc76a11461030b57600080fd5b806304c76af0146100b9578063137c68fa146100c3578063195f58e9146100df57806324d7806c146101025780634b0bddd21461012e57806356a3150b14610141575b600080fd5b6100c161031e565b005b6100cc60045481565b6040519081526020015b60405180910390f35b6100f26100ed366004610a75565b610427565b60405190151581526020016100d6565b6100f2610110366004610a9f565b6001600160a01b031660009081526020819052604090205460ff1690565b6100c161013c366004610ac8565b610461565b61022b61014f366004610a75565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506001600160a01b0382166000908152600560209081526040808320848452825291829020825160e0810184528154815260018201549281019290925260028101546001600160801b038116938301939093526001600160781b03600160801b840416606083015260ff600160f81b938490048116151560808401526003909101546001600160f81b03811660a08401529290920490911660c082015292915050565b6040516100d6919081518152602080830151908201526040808301516001600160801b0316908201526060808301516001600160781b03169082015260808083015115159082015260a0808301516001600160f81b03169082015260c09182015160ff169181019190915260e00190565b6100c16102aa366004610a75565b610535565b6100cc60035481565b6002546102cb906001600160a01b031681565b6040516001600160a01b0390911681526020016100d6565b6100c16102f1366004610aff565b6106b9565b6102fe6106d4565b6040516100d69190610b18565b6102cb610319366004610aff565b610736565b3360009081526020819052604090205460ff166103565760405162461bcd60e51b815260040161034d90610b65565b60405180910390fd5b600480546002546040516370a0823160e01b815230938101939093526000926001600160a01b03909116906370a0823190602401602060405180830381865afa1580156103a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cb9190610b94565b6103d59190610bc3565b6002549091506103ef906001600160a01b03163383610760565b60405181815233907fca1cf43de312865665f595e88f569f9d5246690c07df26e86aba01147e6d13149060200160405180910390a250565b6001600160a01b03821660009081526005602090815260408083208484529091528120541561045757600161045a565b60005b9392505050565b3360009081526020819052604090205460ff166104905760405162461bcd60e51b815260040161034d90610b65565b6001600160a01b0382166104d85760405162461bcd60e51b815260206004820152600f60248201526e494e56414c49445f4144445245535360881b604482015260640161034d565b6001600160a01b03821660008181526020818152604091829020805460ff191685151590811790915591519182527fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb78910160405180910390a25050565b3360009081526020819052604090205460ff166105645760405162461bcd60e51b815260040161034d90610b65565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190610b94565b6001546003549192506105e391610bda565b8110156106225760405162461bcd60e51b815260206004820152600d60248201526c1393d517d1115413d4d2551151609a1b604482015260640161034d565b6001600160a01b038316600090815260056020908152604080832085845290915290208054156106885760405162461bcd60e51b81526020600482015260116024820152701053149150511657d0d3d3541311551151607a1b604482015260640161034d565b4281556003810154600480546001600160f81b03909216916000906106ae908490610bf9565b909155505050505050565b6002546106d1906001600160a01b03163330846107c8565b50565b6060600180548060200260200160405190810160405280929190818152602001828054801561072c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161070e575b5050505050905090565b6001818154811061074657600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516001600160a01b0383166024820152604481018290526107c390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610806565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108009085906323b872dd60e01b9060840161078c565b50505050565b600061085b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108d89092919063ffffffff16565b8051909150156107c357808060200190518101906108799190610c11565b6107c35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161034d565b60606108e784846000856108ef565b949350505050565b6060824710156109505760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161034d565b6001600160a01b0385163b6109a75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161034d565b600080866001600160a01b031685876040516109c39190610c5a565b60006040518083038185875af1925050503d8060008114610a00576040519150601f19603f3d011682016040523d82523d6000602084013e610a05565b606091505b5091509150610a15828286610a20565b979650505050505050565b60608315610a2f57508161045a565b825115610a3f5782518084602001fd5b8160405162461bcd60e51b815260040161034d9190610c76565b80356001600160a01b0381168114610a7057600080fd5b919050565b60008060408385031215610a8857600080fd5b610a9183610a59565b946020939093013593505050565b600060208284031215610ab157600080fd5b61045a82610a59565b80151581146106d157600080fd5b60008060408385031215610adb57600080fd5b610ae483610a59565b91506020830135610af481610aba565b809150509250929050565b600060208284031215610b1157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610b595783516001600160a01b031683529284019291840191600101610b34565b50909695505050505050565b602080825260159082015274105113525397d050d0d154d4d7d491545552549151605a1b604082015260600190565b600060208284031215610ba657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610bd557610bd5610bad565b500390565b6000816000190483118215151615610bf457610bf4610bad565b500290565b60008219821115610c0c57610c0c610bad565b500190565b600060208284031215610c2357600080fd5b815161045a81610aba565b60005b83811015610c49578181015183820152602001610c31565b838111156108005750506000910152565b60008251610c6c818460208701610c2e565b9190910192915050565b6020815260008251806020840152610c95816040850160208701610c2e565b601f01601f1916919091016040019291505056fea26469706673582212201bfb9ad2f8499bdcd753fdecd8d9eaacca50ed8964b0db3fce562aabb604e35864736f6c634300080e0033";

type BaseMilestoneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseMilestoneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseMilestone__factory extends ContractFactory {
  constructor(...args: BaseMilestoneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<BaseMilestone> {
    return super.deploy(overrides || {}) as Promise<BaseMilestone>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaseMilestone {
    return super.attach(address) as BaseMilestone;
  }
  override connect(signer: Signer): BaseMilestone__factory {
    return super.connect(signer) as BaseMilestone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseMilestoneInterface {
    return new utils.Interface(_abi) as BaseMilestoneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseMilestone {
    return new Contract(address, _abi, signerOrProvider) as BaseMilestone;
  }
}
