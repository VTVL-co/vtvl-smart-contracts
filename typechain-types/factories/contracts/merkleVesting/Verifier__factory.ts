/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Verifier,
  VerifierInterface,
} from "../../../contracts/merkleVesting/Verifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setMerleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104788061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310f015551461005c578063715018a6146100715780638da5cb5b14610079578063972a2a6214610098578063f2fde38b146100ab575b600080fd5b61006f61006a3660046102e9565b6100be565b005b61006f6100cb565b600054604080516001600160a01b039092168252519081900360200190f35b61006f6100a6366004610318565b6100df565b61006f6100b93660046103dc565b610131565b6100c66101aa565b600155565b6100d36101aa565b6100dd6000610204565b565b6100ec8260015483610254565b61012d5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064015b60405180910390fd5b5050565b6101396101aa565b6001600160a01b03811661019e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610124565b6101a781610204565b50565b6000546001600160a01b031633146100dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610124565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082610261858461026a565b14949350505050565b600081815b84518110156102af5761029b8286838151811061028e5761028e610405565b60200260200101516102b7565b9150806102a78161041b565b91505061026f565b509392505050565b60008183106102d35760008281526020849052604090206102e2565b60008381526020839052604090205b9392505050565b6000602082840312156102fb57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561032b57600080fd5b823567ffffffffffffffff8082111561034357600080fd5b818501915085601f83011261035757600080fd5b813560208282111561036b5761036b610302565b8160051b604051601f19603f8301168101818110868211171561039057610390610302565b6040529283528183019350848101820192898411156103ae57600080fd5b948201945b838610156103cc578535855294820194938201936103b3565b9997909101359750505050505050565b6000602082840312156103ee57600080fd5b81356001600160a01b03811681146102e257600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161043b57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220c1969301ec0e46987d3989c441d1bb3de020be2a838e1a92750f513869c5a4f264736f6c634300080e0033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
